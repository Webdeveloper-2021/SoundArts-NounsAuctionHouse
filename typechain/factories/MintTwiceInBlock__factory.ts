/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MintTwiceInBlock,
  MintTwiceInBlockInterface,
} from "../MintTwiceInBlock";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "minter",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "cost",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "numberToMint",
        type: "uint256",
      },
    ],
    name: "mintTwoTimes",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061016c806100206000396000f3fe60806040526004361061001e5760003560e01c8063d24eaf0c14610023575b600080fd5b6100366100313660046100f5565b610038565b005b60405163140e25ad60e31b8152600481018290526001600160a01b0384169063a0712d689084906024016000604051808303818588803b15801561007b57600080fd5b505af115801561008f573d6000803e3d6000fd5b505060405163140e25ad60e31b8152600481018590526001600160a01b038716935063a0712d6892508591506024016000604051808303818588803b1580156100d757600080fd5b505af11580156100eb573d6000803e3d6000fd5b5050505050505050565b60008060006060848603121561010a57600080fd5b83356001600160a01b038116811461012157600080fd5b9560208501359550604090940135939250505056fea2646970667358221220ecc2107b74aea4dc337dbd7fafc66e764f1d9068b6fa9a970459b5f72adc8c4064736f6c634300080a0033";

type MintTwiceInBlockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MintTwiceInBlockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MintTwiceInBlock__factory extends ContractFactory {
  constructor(...args: MintTwiceInBlockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MintTwiceInBlock> {
    return super.deploy(overrides || {}) as Promise<MintTwiceInBlock>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MintTwiceInBlock {
    return super.attach(address) as MintTwiceInBlock;
  }
  connect(signer: Signer): MintTwiceInBlock__factory {
    return super.connect(signer) as MintTwiceInBlock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MintTwiceInBlockInterface {
    return new utils.Interface(_abi) as MintTwiceInBlockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MintTwiceInBlock {
    return new Contract(address, _abi, signerOrProvider) as MintTwiceInBlock;
  }
}
